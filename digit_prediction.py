# -*- coding: utf-8 -*-
"""digit prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DkmT5w_i57i0Q6H00PcnZnm8Dpl0Mxct

# **Hand Written Digit Prediction - Classification Analysis**

https://www.youtube.com/watch?v=UD6co1HVpO4&list=PLl3P-U08Zvwll_bzhyp-QPFO7CewOIGi2&index=6

# **Import Libraries**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""# **Import Data**"""

from sklearn.datasets import load_digits

model=load_digits()

_, axes=plt.subplots(nrows=1,ncols=4,figsize=(10,3))
for ax,image,label in zip(axes, model.images,model.target):
    ax.set_axis_off()
    ax.imshow(image,cmap=plt.cm.gray_r,interpolation="nearest")
    ax.set_title("training: %i"% label)

"""# **Data Preprocessing**

**Flatten Image**
"""

model.images.shape

model.images[0]

model.images[0].shape

len(model.images)

n_samples=len(model.images)
data=model.images.reshape((n_samples,-1))

data[0]

data[0].shape

data.shape



"""# **Scaling Image Data**"""

data.min()

data.max()

data=data/16

data.min()

data.max()

data[0]



"""# **Train Test Split Data**"""

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(data,model.target,test_size=0.3)

x_train.shape,x_test.shape,y_train.shape,y_test.shape



"""# **Random Forest Model**"""

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier()

rf.fit(x_train,y_train)





"""# **Predict Test Data**"""

y_pred=rf.predict(x_test)

y_pred



"""# **Model Accuracy**"""

from sklearn.metrics import confusion_matrix,classification_report

confusion_matrix(y_test,y_pred)

print(classification_report(y_test,y_pred))